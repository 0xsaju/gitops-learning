---
- hosts: web
  become: yes
  vars:
    docker_compose_version: "2.24.7"
  tasks:
    - name: Install required apt packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Install MySQL client
      apt:
        name: mysql-client-core-8.0
        state: present
        update_cache: yes

    - name: Install pip3
      apt:
        name: python3-pip
        state: present

    - name: Download DigiCertGlobalRootCA.crt.pem
      get_url:
        url: https://dl.cacerts.digicert.com/DigiCertGlobalRootCA.crt.pem
        dest: /home/azureuser/DigiCertGlobalRootCA.crt.pem
        owner: azureuser
        group: azureuser
        mode: '0644'

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Add user to docker group
      user:
        name: azureuser
        groups: docker
        append: yes

    - name: Get VM public IP from Terraform
      command: terraform -chdir=../infra output -raw vm_public_ip
      register: vm_ip
      delegate_to: localhost
      become: false

    - name: Template docker-compose.yml with dynamic API URL
      template:
        src: files/docker-compose.yml.j2
        dest: /home/azureuser/docker-compose.yml
        owner: azureuser
        group: azureuser
        mode: '0644'
      vars:
        api_url: "http://{{ vm_ip.stdout }}:4000"

    - name: Start Docker Compose stack
      shell: |
        /usr/local/bin/docker-compose -f /home/azureuser/docker-compose.yml up -d
      args:
        chdir: /home/azureuser

    - name: Wait for frontend to be up
      uri:
        url: http://localhost:3000
        status_code: 200
      register: frontend_status
      retries: 10
      delay: 5
      until: frontend_status.status == 200 