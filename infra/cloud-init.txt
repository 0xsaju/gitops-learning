#cloud-config
package_update: true
packages:
  - docker.io
runcmd:
  - curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - usermod -aG docker azureuser
  - chown azureuser:azureuser /home/azureuser/docker-compose.yml
  - su - azureuser -c "/usr/local/bin/docker-compose -f /home/azureuser/docker-compose.yml up -d"
write_files:
  - path: /home/azureuser/docker-compose.yml
    permissions: '0644'
    owner: azureuser:azureuser
    content: |
      version: '3.8'
      services:
        db:
          image: mysql:8.0
          container_name: mysql_db
          restart: always
          environment:
            MYSQL_ROOT_PASSWORD: rootpassword
            MYSQL_DATABASE: appdb
            MYSQL_USER: appuser
            MYSQL_PASSWORD: appPassword123!
          ports:
            - "3306:3306"
          volumes:
            - db_data:/var/lib/mysql
          healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 5s
            timeout: 5s
            retries: 10

        backend:
          image: 0xsaju/myapp-backend:latest
          container_name: backend_app
          restart: always
          environment:
            DB_HOST: db
            DB_USER: appuser
            DB_PASSWORD: appPassword123!
            DB_NAME: appdb
            DB_PORT: 3306
            JWT_SECRET: supersecretkey
            FRONTEND_URL: http://localhost:3000
            PORT: 4000
          ports:
            - "4000:4000"
          depends_on:
            db:
              condition: service_healthy

        frontend:
          image: 0xsaju/myapp-frontend:latest
          container_name: frontend_app
          restart: always
          environment:
            REACT_APP_API_URL: http://localhost:4000
          ports:
            - "3000:3000"
          depends_on:
            - backend

        watchtower:
          image: containrrr/watchtower
          container_name: watchtower
          restart: always
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
          environment:
            - WATCHTOWER_CLEANUP=true
            - WATCHTOWER_POLL_INTERVAL=60

      volumes:
        db_data: 